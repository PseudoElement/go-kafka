# version: â€˜3.7'

# services:
#   zookeeper:
#     container_name: zookeeper_box
#     image: confluentinc/cp-zookeeper:latest
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#     ports:
#       - 2181:2181
#     healthcheck:
#       test: ["CMD", "nc", "-z", "localhost", "2181"]
#       interval: 5s
#       timeout: 5s
#       retries: 5
    
#   kafka:
#     container_name: kafka_box
#     image: confluentinc/cp-kafka:latest
#     depends_on:
#       - zookeeper
#     ports:
#       - 9092:9092
#       - 29092:29092
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_PROCESS_ROLES: broker,controller
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       CLUSTER_ID: "your-cluster-id"  # Can be any string
#       KAFKA_NODE_ID: "1"                  # Must match broker ID
#     healthcheck:
#       test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
#       interval: 10s
#       timeout: 5s
#       retries: 10
  
#   server:
#     container_name: server_box
#     build: 
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - 8080:8080
#     environment:
#       KAFKA_BROKERS: "kafka:9092"
#     depends_on:
#       kafka:
#         condition: service_healthy

version: '3.8'

services:
  kafka:
    container_name: kafka_box
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29092"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # Listeners configuration
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:29092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      CLUSTER_ID: "your-cluster-id"
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10

  server:
    container_name: server_box
    build: .
    ports:
      - 8080:8080
    environment:
      KAFKA_BROKERS: "kafka:9092"
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  kafka-data: